var g_setup_file_headers = newArray(
	"*** Auto generated by BB Macros.\n"+
	"Do not modify unless you know exactly what you are doing.\n"+
	"\n"+
	"--------------------------------------------------------------------------------\n"+
		"\tPATHS\n"+
	"--------------------------------------------------------------------------------\n"+
	"\n",
	"\n"+
	"--------------------------------------------------------------------------------\n"+
		"\tSETTINGS\n"+
	"--------------------------------------------------------------------------------\n"+
	"\n");
var g_setup_block_01_labels = newArray("Working Path: ",
									   "Analysis Path: ",
									   "Obs Unit Roi Path: ",
									   "Analysis Setup File: ");
var g_setup_block_01_defaults = newArray("",
										 "",
										 "",
										 "");
var temp_directory = getDirectory("temp") +
					 "BB_macros" + File.separator() +
					 "Fibers" + File.separator();

/*
--------------------------------------------------------------------------------
	MACRO
--------------------------------------------------------------------------------
*/

macro "Global_configurator_fibers.ijm" {
	args = getArgument();
	args = split(args, "|");
	/*
		This macro understands the following arguments:
		1) "create":
			Used to set the working directories.
		    The macro will create a new Global_configuration_fibers.txt
		    file, prompting the user to enter the new base directory. If
		    the file already exists, any configuration below Block 01, which
		    contains the working directories, should be copied over into
		    the new file.
		2) "change|block_index|line_index|new_value":
			Used to modify a single value in the Global_configuration_fibers.txt
			file. The block_index and line_index values start at 1, not 0. Every
			other value in the file is copied into the new file, which overwrites
			the old file.
		3) "retrieve|block_index|line_index":
			Used to retrieve a single value in the Global_configuration_fibers.txt
			file. The block_index and line_index values start at 1, not 0. The
			retrieved value is stored in the temp_directory in g_config_temp.txt.
		Multiple arguments must be separated by a pipe character.
	*/

	global_configuration_file = getDirectory("plugins") +
							    "BB_macros" + File.separator() +
							    "Fibers_modules" + File.separator() +
							    "Global_configuration_fibers.txt";

	path_args = newArray("workingPath",
						"analysisPath",
						"obsUnitRoiPath",
						"analysisSetupFile");

	if (args[0] == "create") {
		if (File.exists(global_configuration_file)) {
			first_time_setup = false;
			// Retrieve anything below Block 01 for writing to the new file,
			//     as everything will have to be written fresh.
		} else {
			first_time_setup = true;
		}

		working_path = getDirectory("Choose the directory in which image files are located:");
		analysis_path = working_path + "Analysis" + File.separator();
		obs_unit_ROI_path = analysis_path + "OBS UNIT ROIs" + File.separator();
		analysis_setup_file = analysis_path + "Setup.txt";
		global_setup_block_01_choices = newArray(working_path,
												 analysis_path,
												 obsUnitRoi_path,
												 analysisSetupFile);

		global_configuration = File.open(global_configuration_file);
		print(globalConfiguration, globalSetupFileHeaders[0]);
		for (i=0; i<globalSetupBlock01Labels.length; i++) {
			print(globalConfiguration, globalSetupBlock01Labels[i] + "\t" + globalSetupBlock01Choices[i]);
		}
		print(globalConfiguration, globalSetupFileHeaders[1]);
		if (firstTimeSetupBoolean == true) {
			for (i=0; i<globalSetupBlock02Labels.length; i++) {
				print(globalConfiguration, globalSetupBlock02Labels[i] + "\t" + globalSetupBlock02Defaults[i]);
			}
		} else {
			for (i=0; i<globalSetupBlock02Labels.length; i++) {
				print(globalConfiguration, globalSetupBlock02Labels[i] + "\t" + lastBlock02Settings[i]);
			}
		}
		File.close(globalConfiguration);
	} else if (args[0] == "change") {
		modifyGlobalSetupFile(args[1], args[2], args[3]);
	} else if (args[0] == "retrieve") {
		writeRetrievedToTemp(args[1], args[2]);
	} else if (args.length == 1) {
		pathIndex = -1;
		for (i=0; i<pathArgs.length; i++) {
			if (args[0] == pathArgs[i]) {
				pathIndex = i;
				break;
			}
		}
		retrieved = getGlobalConfiguration(0, pathIndex);
		retrievedTemp = File.open(getDirectory("temp") + "temp retrieved value.txt");
		print(retrievedTemp, retrieved);
		File.close(retrievedTemp);
	} else {
		exit("Invalid arguments passed to Global Configurator");
	}
}

/*
--------------------------------------------------------------------------------
	FUNCTIONS
--------------------------------------------------------------------------------
*/

function getGlobalConfiguration(blockIndex, lineIndex) {
	rawText = File.openAsString(globalConfigurationFile);
	result = substring(rawText, indexOf(rawText, globalSetupFileHeaders[blockIndex]) + lengthOf(globalSetupFileHeaders[blockIndex]), lengthOf(rawText));
	if (blockIndex < globalSetupFileHeaders.length - 1) {
		result = substring(result, 0, indexOf(result, globalSetupFileHeaders[blockIndex + 1]));
	}
	result = split(result, "\n");
	trimmedResult = newArray();
	for (i=0; i<result.length; i++) {
		if (lengthOf(result[i]) == 0) { continue; }
		append = result[i];
		append = substring(append, indexOf(append, ": \t") + lengthOf(": \t"), lengthOf(append));
		trimmedResult = Array.concat(trimmedResult, append);
	}
	if (lineIndex < 0) {
		return trimmedResult;
	} else {
		return trimmedResult[lineIndex];
	}
}

function modifyGlobalSetupFile(blockIndex, lineIndex, newValue) {
	lastBlock01Settings = getGlobalConfiguration(0, -1);
	lastBlock02Settings = getGlobalConfiguration(1, -1);

	globalConfiguration = File.open(globalConfigurationFile);
	print(globalConfiguration, globalSetupFileHeaders[0]);
	for (i=0; i<globalSetupBlock01Labels.length; i++) {
		if (blockIndex == 0 && lineIndex == i) {
			print(globalConfiguration, globalSetupBlock01Labels[i] + "\t" + newValue);
		} else {
			print(globalConfiguration, globalSetupBlock01Labels[i] + "\t" + lastBlock01Settings[i]);
		}
	}
	print(globalConfiguration, globalSetupFileHeaders[1]);
	for (i=0; i<globalSetupBlock02Labels.length; i++) {
		if (blockIndex == 1 && lineIndex == i) {
			print(globalConfiguration, globalSetupBlock02Labels[i] + "\t" + newValue);
		} else {
			print(globalConfiguration, globalSetupBlock02Labels[i] + "\t" + lastBlock02Settings[i]);
		}
	}
	File.close(globalConfiguration);
}

function writeRetrievedToTemp(blockIndex, lineIndex) {
	retrieved = getGlobalConfiguration(blockIndex, lineIndex);
	retrievedTemp = File.open(getDirectory("temp") + "temp retrieved value.txt");
	print(retrievedTemp, retrieved);
	File.close(retrievedTemp);
}